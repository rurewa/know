// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// Счётчик с кратным нажатию приращением, ограничителем по количеству приращений и простым "антидребегом"
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
#include <Arduino.h>

int MODE = 0; // Значение статуса режима RGB светодиода
const int COUNT = 5; // Предельное число режимов
bool currentState = false; // Текущее состояние кнопки
bool lastState = false; // Флаг предыдущего состояния кнопки. Служит для синхронизации между подпрограммами

void setup() {
    Serial.begin(9600);
}

void loop() {
  currentState = digitalRead(17); // Опрашиваем кнопку
  if(currentState == true && lastState == false) // Если текущее состояние отличается от предыдущего
    {
      delay(5); // Ждём немного (для стабилизации кнопки после эффекта "дребезга")
      currentState = digitalRead(17); // Снова опрашиваем кнопку для подтверждения
      if(currentState != lastState) // Если текущее состояние подтверждается
      {
        while (MODE++ >= COUNT) { MODE = 0; } // Запускаем счётчик с ограничителем
        // Предыдущее состояние уже стало true! Поэтому меняем значение, чтобы больше не повторялось
        lastState = currentState;
        Serial.println(MODE);
      }
    }
  // Если текущее состояние кнопки false, то предыдущее состояние, по логике, должно быть true!
  if (currentState == false) { lastState = currentState; }
}
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
